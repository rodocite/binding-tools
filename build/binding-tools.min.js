'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var React=require('react');var Binding=function(){function Binding(yourClass,applicationState){_classCallCheck(this,Binding);this.class=yourClass;this.state=applicationState;this.prototypeMethods=Object.getOwnPropertyNames(yourClass.prototype).filter(function(property){return typeof new yourClass(applicationState)[property]==='function'});this.instanceProperties=Object.getOwnPropertyNames(new yourClass(applicationState)).filter(function(property){return typeof new yourClass(applicationState)[property]!=='function'})}_createClass(Binding,[{key:'methods',value:function methods(){return this.prototypeMethods}},{key:'properties',value:function properties(){return this.instanceProperties}},{key:'reactProps',value:function reactProps(){if(new this.class instanceof React.Component){return new this.class(this.state).props}console.error('This is not a React class.')}},{key:'describeInstance',value:function describeInstance(){return new this.class(this.state)}},{key:'describeMethod',value:function describeMethod(methodName){return this.class.prototype[methodName].toString()}},{key:'runMethod',value:function runMethod(methodName,methodArguments){var state=arguments.length<=2||arguments[2]===undefined?this.state:arguments[2];var instance=new this.class(state);console.log('Running method:',methodName);console.log('Arguments:',methodArguments||'None');console.log('Instance\n----------------\n',this.showClassInfo(state),'\n----------------\n');console.log('Function\n----------------\n',this.describeMethod(methodName),'\n----------------\n');console.log('Return Value\n----------------\n');return instance[methodName](methodArguments)}},{key:'extractMethods',value:function extractMethods(){var log=arguments.length<=0||arguments[0]===undefined?true:arguments[0];var _this=this;var useCallback=arguments.length<=1||arguments[1]===undefined?false:arguments[1];var callback=arguments[2];this.prototypeMethods.slice(1).forEach(function(method,index){var stringifiedMethod=_this.class.prototype[method].toString();if(log){console.log('\n -------------------------- \n',stringifiedMethod,'\n -------------------------- \n')}if(callback){callback(stringifiedMethod)}});return'Completed extracting '+(this.prototypeMethods.length-1)+' methods.'}},{key:'showReactInfo',value:function showReactInfo(){if(new this.class instanceof React.Component){return new this.class(this.state)}console.error('This is not a React class.')}},{key:'showClassInfo',value:function showClassInfo(){return{name:new this.class(this.state).constructor.name,state:this.state,methods:this.prototypeMethods,properties:this.instanceProperties}}}]);return Binding}();var pry=function pry(){var Binding=Binding;debugger};module.exports=function(yourClass){var state=arguments.length<=1||arguments[1]===undefined?{}:arguments[1];state.pry=pry;return new Binding(yourClass,state)};
